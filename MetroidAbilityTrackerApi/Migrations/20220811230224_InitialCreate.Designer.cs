// <auto-generated />
using System;
using MetroidAbilityTrackerApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MetroidAbilityTrackerApi.Migrations
{
    [DbContext(typeof(MetroidAbilityTrackerApiContext))]
    [Migration("20220811230224_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AbilitiesTracker", b =>
                {
                    b.Property<int>("AbilitiesID")
                        .HasColumnType("int");

                    b.Property<int>("TrackerID")
                        .HasColumnType("int");

                    b.HasKey("AbilitiesID", "TrackerID");

                    b.HasIndex("TrackerID");

                    b.ToTable("AbilitiesTracker");
                });

            modelBuilder.Entity("MetroidAbilityTrackerApi.Models.Abilities", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("AbilityDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("MetroidAbilityTrackerApi.Models.Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("GameName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GameReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("MetroidAbilityTrackerApi.Models.Tracker", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("GameID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GameID");

                    b.ToTable("Trackers");
                });

            modelBuilder.Entity("AbilitiesTracker", b =>
                {
                    b.HasOne("MetroidAbilityTrackerApi.Models.Abilities", null)
                        .WithMany()
                        .HasForeignKey("AbilitiesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MetroidAbilityTrackerApi.Models.Tracker", null)
                        .WithMany()
                        .HasForeignKey("TrackerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MetroidAbilityTrackerApi.Models.Tracker", b =>
                {
                    b.HasOne("MetroidAbilityTrackerApi.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameID");

                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
